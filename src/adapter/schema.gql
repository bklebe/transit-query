schema {
  query: RootSchemaQuery
}
directive @filter(
  """
  Name of the filter operation to perform.
  """
  op: String!
  """
  List of string operands for the operator.
  """
  value: [String!]
) on FIELD | INLINE_FRAGMENT
directive @tag(
  """
  Name to apply to the given property field.
  """
  name: String
) on FIELD
directive @output(
  """
  What to designate the output field generated from this property field.
  """
  name: String
) on FIELD
directive @optional on FIELD
directive @recurse(
  """
  Recurse up to this many times on this edge. A depth of 1 produces the current
  vertex and its immediate neighbors along the given edge.
  """
  depth: Int!
) on FIELD
directive @fold on FIELD
directive @transform(
  """
  Name of the transformation operation to perform.
  """
  op: String!
) on FIELD

type RootSchemaQuery {
  Vehicle: [Vehicle!]!
}

type Trip {
  id: String!
  direction_id: Int!
  trip_headsign: String!

  route: Route
  vehicle: Vehicle
}

type TripDescriptor {
  id: String!
  direction_id: Int
  start_time: String
  start_date: String
  schedule_relationship: String

  route: Route
  vehicle: Vehicle
}

type Vehicle {
  id: String!
  label: String!
  latitude: Float!
  longitude: Float!
  current_stop_sequence: Int
  current_status: String
  timestamp: Int
  occupancy_percentage: Int
  occupancy_status: String
  multi_carriage_details: [CarriageDetails!]

  stop: Stop
  trip: Trip
  trip_descriptor: TripDescriptor
}

type CarriageDetails {
  id: String
  label: String
  occupancy_status: String
  occupancy_percentage: Int
}

type Route {
  id: String!
  short_name: String
  long_name: String
}

type Stop {
  id: String!
  name: String
}
